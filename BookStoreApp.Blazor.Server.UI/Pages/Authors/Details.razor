page "/authors/details/{id:int}"
@inject IAuthorService _authorService
@inject NavigationManager _navigationManager

<h3>Author Details</h3>

<EditForm Model="Author">
    <fieldset disabled="true">
        <div class="form-group">
            <label for="firstname">First Name</label> 
            <InputText @bind-Value="Author.FirstName" class="form-control" id="firstname" />
            <ValidationMessage For="@(() => Author.FirstName)" />
        </div>
        <br/>
        <div class="form-group">
            <label for="lastname">Last Name</label>
            <InputText @bind-Value="Author.LastName" class="form-control" id="lastname" />
            <ValidationMessage For="@(() => Author.LastName)" />
        </div>
        <br/>
        <div class="form-group">
            <label for="bio">Biography</label>
            <InputTextArea @bind-Value="Author.Bio" class="form-control" id="bio" />
            <ValidationMessage For="@(() => Author.Bio)" />
        </div>
        <br/>
    </fieldset>   

    <button @onclick="GoToEdit" class="btn btn-warning">
        <span class="oi oi-pencil"></span>
        Edit Author
    </button>

    <button @onclick="BackToList" class="btn btn-outline-secondary">
        <span class="oi oi-media-skip-backward"></span>
        Back To List
    </button>
</EditForm>


@code {
    [Parameter]
    public int id { get; set; }

    private AuthorDetailsDto Author = new AuthorDetailsDto();

    protected async override Task OnInitializedAsync()
    {
        var response = await _authorService.GetAuthorDetails(id);
        if (response.Success)
        {
            Author = response.Data;
        }
    }

    private void BackToList()
    {
        _navigationManager.NavigateTo("/authors/");
    }

    private void GoToEdit()
    {
        _navigationManager.NavigateTo($"/authors/edit/{Author.Id}");
    }
}